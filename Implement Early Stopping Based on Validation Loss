#Implement Early Stopping Based on Validation Loss

#Create a function to decide when to stop training a model early based on a list of validation losses. 
#The early stopping criterion should stop training if the validation loss hasn't improved for a specified number of epochs (patience), 
#and only count as improvement if the loss decreases by more than a certain threshold (min_delta). 
#Your function should return the epoch to stop at and the best epoch that achieved the lowest validation loss.
#from typing import Tuple

def early_stopping(val_losses: list[float], patience: int, min_delta: float) -> Tuple[int, int]:
    best = val_losses[0]
    best_epoch = 0
    stop_epoch = len(val_losses)-1
    for i in range(1, len(val_losses)):
        if best - val_losses[i] > min_delta:
            best = val_losses[i]
            best_epoch = i
        else:
            if i - best_epoch >= patience:
                stop_epoch = i
                break
    return (stop_epoch, best_epoch)
